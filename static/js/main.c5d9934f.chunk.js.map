{"version":3,"sources":["App/Settings.tsx","App/simulation/constants.ts","App/simulation/brain.ts","App/simulation/getInitialState.ts","App/simulation/stateReducer.ts","App/simulation/evolution.ts","App/EvolutionProgress.tsx","App/simulation/animationLoop.ts","App/simulation/canvasComponents/createCreature.ts","App/simulation/canvasComponents/createFood.ts","App/simulation/canvasComponents/createPointsText.ts","App/simulation/mapStateToRendererObjects.ts","App/simulation/useSimulation.ts","App/simulation/drawArc.ts","App/Canvas.tsx","App/App.tsx","serviceWorker.ts","index.tsx","App/App.module.scss","App/Canvas.module.scss"],"names":["Settings","iterations","foodAvailability","setIterations","setFoodAvailability","onStart","className","styles","settingsContainer","Typography","variant","component","settingsInnerBox","settingSection","id","gutterBottom","Slider","value","aria-labelledby","step","marks","min","max","valueLabelDisplay","onChange","event","Button","color","onClick","visibilityAngle","Math","PI","activationFunctions","getBrainOutput","brain","inputs","weights","layersStructure","length","Error","firstLayerWeightsNumber","size","firstLayerWeights","slice","secondLayerValues","chunk","map","inputsSum","zip","reduce","acc","curr","fnName","x","exp","activate","activateFunction","getInitialState","foodObjects","Array","fill","type","random","y","creature","heading","visibilityRange","tummyContent","objects","normalizeAngle","angle","getFoodAngle","foodObject","creatureObject","dx","dy","adx","abs","ady","atan","updateCreature","dt","eyeImage","objectsAngles","filter","hypot","object","_","index","getEyeImage","angularVelocity","ds","sin","cos","stateReducer","state","find","objectsWithoutEatenFood","eatenFoodsNumber","updateStateByMultipleSteps","initialState","prevState","evaluateIndividual","a","timeSteps","simulationTime","timeStepsNumber","then","s","fn","Promise","res","setTimeout","resolve","finalState","generateIndividual","runEvolution","iterationCallback","Genemo","run","generateInitialPopulation","selection","roulette","minimizeFitness","succession","elitism","keepFactor","reproduce","crossover","parentA","parentB","mutate","mutation","transformRandomGene","weight","mutationProbability","evaluatePopulation","individuals","all","individual","stopCondition","maxIterations","args","logIterationData","include","iteration","show","avgFitness","maxFitness","logsKeys","key","EvolutionProgress","onFinish","useState","currentIteration","setCurrentIteration","useCallback","useEffect","getHighestFitnessIndividual","console","log","progress","Box","position","display","CircularProgress","top","left","bottom","right","alignItems","justifyContent","round","animationLoop","mapStateToRendererObjects","render","getTime","Date","maxDt","Infinity","time","isPaused","executeIteration","currentTime","rendererObjects","requestAnimationFrame","setPause","paused","createEye","objectTypes","CIRCLE","radius","contextProps","fillStyle","createCreature","showVisibilityRange","headElements","body","visibilityResolution","rightAngle","rangeCircles","startAngle","endAngle","TRANSFORM","rotation","strokeStyle","children","createFood","createPointsText","text","TEXT","font","textAlign","textBaseline","gameObjects","uiObjects","customDrawHandlers","ARC","context","drawMethod","drawMethods","FILL","beginPath","moveTo","arc","FILL_AND_STROKE","STROKE","stroke","fillAndStroke","useSimulation","canvasRef","useRef","current","getContext","draw","createDrawFunction","pause","objectsToRender","Canvas","canvas","ref","width","height","App","setStep","setWeights","start","onEvolutionFinish","trainedWeights","app","mainContainer","0","1","2","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c5d9934f.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './App.module.scss';\n\nconst Settings = ({\n  iterations,\n  foodAvailability,\n  setIterations,\n  setFoodAvailability,\n  onStart,\n}) => {\n  return (\n    <div className={styles.settingsContainer}>\n      <Typography variant=\"h3\" component=\"h1\">\n        Simulation Settings\n      </Typography>\n      <div className={styles.settingsInnerBox}>\n        <div className={styles.settingSection}>\n          <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n            Iterations\n          </Typography>\n          <Slider\n            value={iterations}\n            aria-labelledby=\"discrete-slider-small-steps\"\n            step={5}\n            marks\n            min={5}\n            max={100}\n            valueLabelDisplay=\"auto\"\n            onChange={(event, value) => setIterations(value)}\n          />\n        </div>\n        <div className={styles.settingSection}>\n          <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n            Food Availability\n          </Typography>\n          <Slider\n            value={foodAvailability}\n            aria-labelledby=\"discrete-slider-small-steps\"\n            step={25}\n            marks\n            min={50}\n            max={400}\n            valueLabelDisplay=\"auto\"\n            onChange={(event, value) => setFoodAvailability(value)}\n          />\n        </div>\n        <Button variant=\"contained\" color=\"primary\" onClick={onStart}>\n          Start\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","export const visibilityAngle = (2 * Math.PI) / 5;\nexport const visibilityRange = 100;\nexport const visibilityResolution = 3;\n","import chunk from 'lodash.chunk';\nimport zip from 'lodash.zip';\n\nexport const activationFunctions = {\n  SIGMOID: 'SIGMOID',\n  IDENTITY: 'IDENTITY',\n};\n\nexport const activate = (fnName, value) => {\n  return {\n    [activationFunctions.SIGMOID]: (x) => 2 / (1 + Math.exp(-x)) - 1,\n    [activationFunctions.IDENTITY]: (x) => x,\n  }[fnName](value);\n};\n\nconst BIAS_NEURON_VALUE = 1;\n\nexport const getBrainOutput = (brain, inputs) => {\n  const { weights, layersStructure } = brain;\n\n  if (layersStructure.length < 2) {\n    throw new Error('Network must have at least 2 layers');\n  }\n\n  const firstLayerWeightsNumber = (layersStructure[0].size + 1) * layersStructure[1].size;\n  const firstLayerWeights = weights.slice(0, firstLayerWeightsNumber);\n  const secondLayerValues = chunk(firstLayerWeights, layersStructure[0].size + 1).map((weights) => {\n    const inputsSum = zip(weights, [...inputs, BIAS_NEURON_VALUE])\n      .map(([weight, value]) => weight * value)\n      .reduce((acc, curr) => acc + curr, 0);\n    return activate(layersStructure[1].activateFunction, inputsSum);\n  });\n\n  if (layersStructure.length === 2) {\n    return secondLayerValues;\n  }\n\n  return getBrainOutput(\n    {\n      ...brain,\n      weights: weights.slice(firstLayerWeightsNumber),\n      layersStructure: layersStructure.slice(1),\n    },\n    secondLayerValues\n  );\n};\n","import { visibilityAngle, visibilityRange, visibilityResolution } from './constants';\nimport { activationFunctions } from './brain';\n\nconst getInitialState = ({ weights, foodAvailability }) => {\n  const foodObjects = new Array(foodAvailability).fill(null).map(() => ({\n    type: 'FOOD',\n    x: Math.random() * 1000,\n    y: Math.random() * 600,\n  }));\n\n  const creature = {\n    type: 'CREATURE',\n    x: 500,\n    y: 300,\n    heading: 0,\n    visibilityAngle,\n    visibilityRange,\n    brain: {\n      weights,\n      layersStructure: [\n        { size: visibilityResolution, activateFunction: activationFunctions.SIGMOID },\n        { size: 5, activateFunction: activationFunctions.SIGMOID },\n        { size: 1, activateFunction: activationFunctions.SIGMOID },\n      ],\n    },\n    tummyContent: 0,\n  };\n\n  return {\n    objects: [...foodObjects, creature],\n  };\n};\n\nexport default getInitialState;\n","import { visibilityAngle, visibilityRange, visibilityResolution } from './constants';\nimport { getBrainOutput } from './brain';\n\nconst normalizeAngle = (angle) => {\n  if (angle > Math.PI) {\n    return angle - 2 * Math.PI;\n  }\n\n  if (angle < -Math.PI) {\n    return angle + 2 * Math.PI;\n  }\n\n  return angle;\n};\n\nconst getFoodAngle = (foodObject, creatureObject) => {\n  const dx = foodObject.x - creatureObject.x;\n  const dy = foodObject.y - creatureObject.y;\n  const adx = Math.abs(dx);\n  const ady = Math.abs(dy);\n  if (dx < 0 && dy >= 0) {\n    // range: from -PI to PI/2\n    return -Math.PI + Math.atan(adx / ady);\n  }\n  if (dx < 0 && dy < 0) {\n    // range: from -PI/2 to 0\n    return -Math.atan(adx / ady);\n  }\n  if (dx >= 0 && dy < 0) {\n    // range: from 0 to PI/2\n    return Math.atan(adx / ady);\n  }\n  if (dx >= 0 && dy >= 0) {\n    // range: from PI/2 to PI\n    return Math.PI - Math.atan(adx / ady);\n  }\n};\n\nconst getEyeImage = (creatureObject, objects) => {\n  const foodObjects = objects.filter(({ type }) => type === 'FOOD');\n  const objectsInRange = foodObjects.filter(\n    ({ x, y }) => Math.hypot(x - creatureObject.x, y - creatureObject.y) < visibilityRange\n  );\n  const objectsAngles = objectsInRange.map((object) => {\n    return {\n      angle: normalizeAngle(getFoodAngle(object, creatureObject) - creatureObject.heading),\n      x: object.x - 500,\n      y: object.y - 300,\n    };\n  });\n  return new Array(visibilityResolution).fill(null).map((_, index) => {\n    return objectsAngles.filter(\n      ({ angle }) =>\n        angle > -visibilityAngle / 2 + (index * visibilityAngle) / visibilityResolution &&\n        angle < -visibilityAngle / 2 + ((index + 1) * visibilityAngle) / visibilityResolution\n    ).length;\n  });\n};\n\nconst updateCreature = (creatureObject, dt, objects) => {\n  const eyeImage = getEyeImage(creatureObject, objects);\n\n  const velocity = 60;\n  const [output] = getBrainOutput(creatureObject.brain, eyeImage);\n  const angularVelocity = 2 * output;\n\n  const ds = velocity * dt;\n  const dx = ds * Math.sin(creatureObject.heading);\n  const dy = ds * Math.cos(creatureObject.heading);\n\n  return {\n    ...creatureObject,\n    x: creatureObject.x + dx,\n    y: creatureObject.y - dy,\n    heading: normalizeAngle(creatureObject.heading + angularVelocity * dt),\n    eyeImage,\n  };\n};\n\nconst stateReducer = (state, dt) => {\n  const creatureObject = state.objects.find(({ type }) => type === 'CREATURE');\n  const objectsWithoutEatenFood = state.objects.filter((object) => {\n    if (object.type === 'FOOD') {\n      return Math.hypot(creatureObject.x - object.x, creatureObject.y - object.y) > 8;\n    }\n    return true;\n  });\n  const eatenFoodsNumber = state.objects.length - objectsWithoutEatenFood.length;\n  return {\n    ...state,\n    objects: objectsWithoutEatenFood.map((object) => {\n      if (object.type === 'CREATURE') {\n        return {\n          ...updateCreature(object, dt, state.objects),\n          tummyContent: object.tummyContent + eatenFoodsNumber,\n        };\n      }\n      return object;\n    }),\n  };\n};\n\nexport default stateReducer;\n","import Genemo from 'genemo';\nimport zip from 'lodash.zip';\nimport chunk from 'lodash.chunk';\n\nimport getInitialState from './getInitialState';\nimport stateReducer from './stateReducer';\n\nconst executeAsynchronously = (fn) =>\n  new Promise((res) => {\n    setTimeout(() => res(fn()), 1);\n  });\n\nconst updateStateByMultipleSteps = (initialState, iterations, dt) => {\n  return new Array(iterations).fill(null).reduce((prevState) => {\n    return stateReducer(prevState, dt);\n  }, initialState);\n};\n\nconst evaluateIndividual = async (weights, foodAvailability) => {\n  const initialState = getInitialState({ weights, foodAvailability });\n  const simulationTime = 90; // seconds\n  const dt = 6 / 60;\n  const timeSteps = chunk(new Array(simulationTime / dt).fill(null), 100);\n  const finalState = await timeSteps.reduce((prevState, { length: timeStepsNumber }) => {\n    return prevState.then((s) =>\n      executeAsynchronously(() => updateStateByMultipleSteps(s, timeStepsNumber, dt))\n    );\n  }, Promise.resolve(initialState));\n  return finalState.objects.find(({ type }) => type === 'CREATURE').tummyContent;\n};\n\nconst generateIndividual = () => {\n  const weights = new Array(4 * 5 + 6 * 1).fill(null).map(() => 10 * (Math.random() - 0.5));\n  return weights;\n};\n\nconst POPULATION_SIZE = 20;\n\nconst runEvolution = ({ iterations, foodAvailability, iterationCallback }) => {\n  return Genemo.run({\n    generateInitialPopulation: Genemo.generateInitialPopulation({\n      generateIndividual,\n      size: POPULATION_SIZE,\n    }),\n    selection: Genemo.selection.roulette({ minimizeFitness: false }),\n    succession: Genemo.elitism({ keepFactor: 1 / POPULATION_SIZE, minimizeFitness: false }),\n    reproduce: Genemo.reproduce({\n      crossover: ([parentA, parentB]) => {\n        return [\n          zip(parentA, parentB).map(([a, b]) => 0.6 * a + 0.4 * b),\n          zip(parentA, parentB).map(([a, b]) => 0.4 * a + 0.6 * b),\n        ];\n      },\n      mutate: Genemo.mutation.transformRandomGene((weight) => weight + Math.random() - 0.5),\n      mutationProbability: 0.1,\n    }),\n    evaluatePopulation: (individuals) =>\n      Promise.all(\n        individuals.map((individual) => evaluateIndividual(individual, foodAvailability))\n      ),\n    stopCondition: Genemo.stopCondition({ maxIterations: iterations }),\n    iterationCallback: (...args) => {\n      Genemo.logIterationData({\n        include: {\n          iteration: { show: true },\n          avgFitness: { show: true },\n          maxFitness: { show: true },\n          logsKeys: [{ key: 'lastIteration' }, { key: 'fitness' }],\n        },\n      })(...args);\n      iterationCallback(args[0].iteration);\n    },\n  });\n};\n\nexport default runEvolution;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport styles from './App.module.scss';\nimport runEvolution from './simulation/evolution';\n\nconst EvolutionProgress = ({ iterations, foodAvailability, onFinish }) => {\n  const [currentIteration, setCurrentIteration] = useState(0);\n\n  const iterationCallback = useCallback((iteration) => {\n    setCurrentIteration(iteration);\n  }, []);\n\n  useEffect(() => {\n    const run = async () => {\n      const { getHighestFitnessIndividual } = await runEvolution({\n        iterations,\n        foodAvailability,\n        iterationCallback,\n      });\n      console.log(getHighestFitnessIndividual());\n      const weights = getHighestFitnessIndividual().individual;\n      onFinish(weights);\n    };\n    run();\n  }, [foodAvailability, iterations, onFinish, iterationCallback]);\n\n  const progress = (100 * currentIteration) / iterations;\n\n  return (\n    <div className={styles.settingsContainer}>\n      <Typography variant=\"h3\" component=\"h1\">\n        Evolution In Progress\n      </Typography>\n      <div className={styles.settingsInnerBox}>\n        <Box position=\"relative\" display=\"inline-flex\">\n          <CircularProgress variant=\"static\" value={progress} />\n          <Box\n            top={0}\n            left={0}\n            bottom={0}\n            right={0}\n            position=\"absolute\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"caption\" component=\"div\">{`${Math.round(progress)}%`}</Typography>\n          </Box>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default EvolutionProgress;\n","export const animationLoop = ({\n  initialState,\n  stateReducer,\n  mapStateToRendererObjects,\n  render,\n  getTime = () => new Date().getTime(),\n  maxDt = Infinity,\n}) => {\n  let state = initialState;\n  let time = getTime();\n  let isPaused = true;\n\n  const executeIteration = () => {\n    const currentTime = getTime();\n    const dt = Math.min(currentTime - time, maxDt);\n    time = currentTime;\n    state = stateReducer(state, dt / 1000);\n    const rendererObjects = mapStateToRendererObjects(state);\n    render(rendererObjects);\n    if (!isPaused) {\n      requestAnimationFrame(executeIteration);\n    }\n  };\n\n  const setPause = (paused) => {\n    isPaused = typeof paused === 'function' ? paused(isPaused) : paused;\n    if (!isPaused) {\n      requestAnimationFrame(executeIteration);\n    }\n  };\n\n  setPause(false);\n  return { setPause };\n};\n","import { objectTypes } from 'declarative-canvas';\n\nconst createEye = ({ x, y }) => ({\n  type: objectTypes.CIRCLE,\n  x,\n  y,\n  radius: 2,\n  contextProps: { fillStyle: 'black' },\n});\n\nconst createCreature = ({\n  x,\n  y,\n  heading,\n  eyeImage,\n  visibilityAngle,\n  visibilityRange,\n  showVisibilityRange = false,\n}) => {\n  const headElements = [\n    {\n      type: objectTypes.CIRCLE,\n      x: 0,\n      y: 0,\n      radius: 8,\n    },\n    createEye({ x: -3, y: -3 }),\n    createEye({ x: 3, y: -3 }),\n  ];\n  const body = {\n    type: objectTypes.CIRCLE,\n    x: 0,\n    y: 12,\n    radius: 8,\n  };\n\n  const visibilityResolution = eyeImage.length;\n  const rightAngle = Math.PI / 2;\n  const rangeCircles = new Array(visibilityResolution).fill(null).map((_, index) => ({\n    type: 'ARC',\n    x: 0,\n    y: 0,\n    radius: visibilityRange,\n    startAngle:\n      -visibilityAngle / 2 - rightAngle + (index * visibilityAngle) / visibilityResolution,\n    endAngle:\n      -visibilityAngle / 2 - rightAngle + ((index + 1) * visibilityAngle) / visibilityResolution,\n    contextProps: {\n      fillStyle: `rgba(255, 255, 255, ${eyeImage[index] ? 0.3 : index % 2 ? 0.2 : 0.2})`,\n    },\n  }));\n\n  return {\n    type: objectTypes.TRANSFORM,\n    dx: x,\n    dy: y,\n    rotation: heading,\n    contextProps: { fillStyle: 'white', strokeStyle: 'white' },\n    children: [...headElements, body, ...(showVisibilityRange ? rangeCircles : [])],\n  };\n};\n\nexport default createCreature;\n","import { objectTypes } from 'declarative-canvas';\n\nconst createFood = ({ x, y }) => ({\n  type: objectTypes.CIRCLE,\n  x,\n  y,\n  radius: 2,\n  contextProps: { fillStyle: '#99f' },\n});\n\nexport default createFood;\n","import { objectTypes } from 'declarative-canvas';\n\nconst createPointsText = ({ x, y, text }) => ({\n  type: objectTypes.TEXT,\n  x,\n  y,\n  text,\n  contextProps: { fillStyle: 'white', font: '20px seif', textAlign: 'left', textBaseline: 'top' },\n});\n\nexport default createPointsText;\n","import createCreature from './canvasComponents/createCreature';\nimport createFood from './canvasComponents/createFood';\nimport createPointsText from './canvasComponents/createPointsText';\n\nconst mapStateToRendererObjects = (state) => {\n  const { objects } = state;\n\n  const gameObjects = objects.map((object) => {\n    switch (object.type) {\n      case 'FOOD':\n        return createFood({ x: object.x, y: object.y });\n      case 'CREATURE':\n        return createCreature({\n          x: object.x,\n          y: object.y,\n          heading: object.heading,\n          eyeImage: object.eyeImage,\n          visibilityAngle: object.visibilityAngle,\n          visibilityRange: object.visibilityRange,\n          showVisibilityRange: true,\n        });\n      default:\n        throw new Error('Unexpected simulation object type');\n    }\n  });\n\n  const uiObjects = [\n    createPointsText({\n      x: 20,\n      y: 20,\n      text: `Points: ${objects.find(({ type }) => type === 'CREATURE').tummyContent}`,\n    }),\n  ];\n\n  return [...gameObjects, ...uiObjects];\n};\n\nexport default mapStateToRendererObjects;\n","import { useRef, useEffect } from 'react';\nimport { createDrawFunction } from 'declarative-canvas';\n\nimport drawArc from './drawArc';\nimport { animationLoop } from './animationLoop';\nimport getInitialState from './getInitialState';\nimport stateReducer from './stateReducer';\nimport mapStateToRendererObjects from './mapStateToRendererObjects';\n\nconst customDrawHandlers = {\n  ARC: drawArc,\n};\n\nconst useSimulation = ({ weights, foodAvailability }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const draw = createDrawFunction(customDrawHandlers);\n\n    let pause = () => {};\n    const run = async () => {\n      const { setPause } = animationLoop({\n        initialState: getInitialState({ weights, foodAvailability }),\n        stateReducer,\n        mapStateToRendererObjects,\n        render: (objectsToRender) => draw({ context, objects: objectsToRender }),\n        maxDt: 100,\n      });\n      pause = () => setPause(true);\n    };\n\n    run();\n\n    return () => {\n      pause();\n    };\n  }, [foodAvailability, weights]);\n\n  return { canvasRef };\n};\n\nexport default useSimulation;\n","import { drawMethods } from 'declarative-canvas';\n\nexport const fillAndStroke = (context, drawMethod) => {\n  if (drawMethod === drawMethods.FILL || drawMethod === drawMethods.FILL_AND_STROKE) {\n    context.fill();\n  }\n  if (drawMethod === drawMethods.STROKE || drawMethod === drawMethods.FILL_AND_STROKE) {\n    context.stroke();\n  }\n};\n\nconst drawArc = (\n  context,\n  { x, y, radius, drawMethod = drawMethods.FILL, startAngle = 0, endAngle = Math.PI * 2 }\n) => {\n  context.beginPath();\n  context.moveTo(x, y);\n  context.arc(x, y, radius, startAngle, endAngle);\n  fillAndStroke(context, drawMethod);\n};\n\nexport default drawArc;\n","import React from 'react';\n\nimport useSimulation from './simulation/useSimulation';\nimport styles from './Canvas.module.scss';\n\nconst Canvas = ({ foodAvailability, weights }) => {\n  const { canvasRef } = useSimulation({ foodAvailability, weights });\n\n  return <canvas className={styles.canvas} ref={canvasRef} width={1000} height={600} />;\n};\n\nexport default Canvas;\n","import React, { useState, useCallback } from 'react';\n\nimport Settings from './Settings';\nimport EvolutionProgress from './EvolutionProgress';\nimport Canvas from './Canvas';\nimport styles from './App.module.scss';\n\nconst App = () => {\n  const [step, setStep] = useState(0);\n  const [iterations, setIterations] = useState(20);\n  const [foodAvailability, setFoodAvailability] = useState(200);\n  const [weights, setWeights] = useState(null);\n\n  const start = async () => {\n    setStep((s) => s + 1);\n    console.log('START');\n  };\n\n  const onEvolutionFinish = useCallback((trainedWeights) => {\n    setWeights(trainedWeights);\n    setStep((s) => s + 1);\n  }, []);\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.mainContainer}>\n        {\n          {\n            0: (\n              <Settings\n                iterations={iterations}\n                foodAvailability={foodAvailability}\n                setIterations={setIterations}\n                setFoodAvailability={setFoodAvailability}\n                onStart={start}\n              />\n            ),\n            1: (\n              <EvolutionProgress\n                iterations={iterations}\n                foodAvailability={foodAvailability}\n                onFinish={onEvolutionFinish}\n              />\n            ),\n            2: <Canvas foodAvailability={foodAvailability} weights={weights} />,\n          }[step]\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app___B2LQ\",\"mainContainer\":\"App_mainContainer__cKELM\",\"settingsContainer\":\"App_settingsContainer__1RSC3\",\"settingsInnerBox\":\"App_settingsInnerBox__1yA00\",\"settingSection\":\"App_settingSection__yfJsU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"Canvas_canvas__1G8xK\"};"],"sourceRoot":""}